---
# tasks file for roles/ansible-role-adauth

- name: Install Kerberos and sssd-clients
  yum: 
    name: 
      - adcli
      - sssd-krb5
      - sssd-ldap
      - sssd-common-pac
      - krb5-workstation
    state: present

# krb5.conf
- name: Configure Kerberos integration with AD
  template:
     src: krb5.conf.j2
     dest: /etc/krb5.conf
     owner: root
     group: root
     mode: 0644

# Check if node's keytab is already present
- name: check if local /etc/krb5.keytab exists
  stat: 
    path: "/etc/krb5.keytab"
  register: krb5_keytab

- name: check if host/krb5.keytab exists on network direcotory
  local_action: stat path="{{ keytab_root_dir }}/{{ inventory_hostname }}/krb5.keytab"
  register: network_krb5_keytab

- name: Copy the keytab from network share
  copy: 
    src: "{{ keytab_root_dir }}/{{ inventory_hostname }}/krb5.keytab"
    dest: "/etc/krb5.keytab"
  when: (krb5_keytab.stat.exists == False and network_krb5_keytab.stat.exists == True )

- name: Generate new keytab and copy that to network share
  command: adcli join -D {{ adauth_realm | lower }} --one-time-password={{ adauth_one_time_password }} -O "{{ ad_organization_unit }}"
  when: (krb5_keytab.stat.exists == False and network_krb5_keytab.stat.exists == False )
# notify: copy keytab

- name: Copy the keytab to the network share
  fetch: 
    src: /etc/krb5.keytab
    dest: "{{ keytab_root_dir }}/{{ inventory_hostname }}/krb5.keytab"
    flat: yes
  when: (krb5_keytab.stat.exists == True and network_krb5_keytab.stat.exists == False )

# sssd
- name: Configure sssd integration with AD
  template:
     src: sssd.conf.j2
     dest: /etc/sssd/sssd.conf
     owner: root
     group: root
     mode: 0600
  notify: restart_sssd

- name: sssd enabled and running
  service:
    name: "{{ sssd_service }}"
    enabled: true
    state: started

# actual configuration for NSS and PAM should be in another module to allow flexibility with other authentication methods
